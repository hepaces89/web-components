// stylelint-disable

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant(
  $background,
  $border,
  $hover-background: lighten($background, 4%), // Zotero patch
  $hover-border: lighten($border, 4%), // Zotero patch
  $active-background: darken($background, 4%), // Zotero patch
  $active-border: darken($border, 4%)) { // Zotero patch
    color: color-yiq($background);
    @include gradient-bg($background);
    border-color: $border;
    @include box-shadow($btn-box-shadow);

    @include hover {
      color: color-yiq($hover-background);
      @include gradient-bg($hover-background);
      border-color: $hover-border;
  }

  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {

      // Zotero focus patch
      box-shadow: none;

      .keyboard-user & {
        box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, 1);
      }
    } @else {

      // Zotero focus patch
      box-shadow: none;

      .keyboard-user & {
        box-shadow: 0 0 0 $btn-focus-width rgba($border, 1);

        &:hover {
          box-shadow: 0 0 0 $btn-focus-width rgba(lighten($border, 4%), 1); // Zotero patch
        }
      }
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    @if $enable-gradients {
      background-image: none; // Remove the gradient for the pressed/active state
    }
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows {

        // Zotero Focus patch
        box-shadow: none;

        .keyboard-user & {
          box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($border, 1);
        }
      } @else {

        // Zotero focus patch
        box-shadow: none;

        .keyboard-user & {
          box-shadow: 0 0 0 $btn-focus-width rgba($border, 1);
        }
      }
    }
  }
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;

  &:hover {
    color: $color-hover;
    background-color: lighten($active-background, 4%); // Zotero patch
    border-color: lighten($active-border, 4%); // Zotero patch
  }

  &:focus,
  &.focus {

    // Zotero focus patch
    box-shadow: none;

    .keyboard-user & {
      box-shadow: 0 0 0 $btn-focus-width rgba($color, 1);

      &:hover {
        box-shadow: 0 0 0 $btn-focus-width rgba(lighten($color, 4%), 1); // Zotero patch
      }
    }
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: darken($active-background, 4%); // Zotero patch
    border-color: darken($active-border, 4%); // Zotero patch

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow != none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, 1);
      } @else {
        box-shadow: none;

        .keyboard-user & {
          box-shadow: 0 0 0 $btn-focus-width rgba(darken($color, 4%), 1); // Zotero patch
        }
      }
    }
  }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  // Manually declare to provide an override to the browser default
  @if $enable-rounded {
    border-radius: $border-radius;
  } @else {
    border-radius: 0;
  }
}

